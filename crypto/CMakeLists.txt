cmake_minimum_required(VERSION 3.1)

project(crypto)

set(CMAKE_CXX_STANDARD 11)
set(CXX_STANDARD_REQUIRED ON)

set(SOURCES
    src/lokinet_identity.cpp
    include/lokinet_identity.hpp
    include/channel_encryption.hpp
    src/channel_encryption.cpp
    include/sodium/private/ed25519_ref10.h
    include/sodium/private/ed25519_ref10_fe_25_5.h
    include/sodium/private/ed25519_ref10_fe_51.h
    include/sodium/private/common.h
    curve25519/ref10/ed25519_ref10.c
    curve25519/ref10/fe_25_5/base.h
    curve25519/ref10/fe_25_5/base2.h
    curve25519/ref10/fe_25_5/constants.h
    curve25519/ref10/fe_25_5/fe.h
)

add_library(crypto STATIC ${SOURCES})

if (NOT OPENSSL_FOUND)
    find_package(OpenSSL REQUIRED)
endif ()
target_link_libraries(crypto PRIVATE OpenSSL::SSL)

target_include_directories(crypto
    PUBLIC ${CMAKE_CURRENT_LIST_DIR}/include
    PRIVATE ${CMAKE_CURRENT_LIST_DIR}/src
)

if (NOT Boost_FOUND)
    find_package(Boost REQUIRED system filesystem)
endif()

target_include_directories(crypto PRIVATE ${Boost_INCLUDE_DIRS})
target_link_libraries(crypto PRIVATE ${Boost_LIBRARIES})

add_executable(crypto_test src/test_main.cpp)
target_link_libraries(crypto_test PRIVATE crypto)

# sodium
list (APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/../contrib")
set(sodium_USE_STATIC_LIBS ON)
find_package(sodium REQUIRED)
target_link_libraries(crypto PUBLIC sodium)
